[{
  "history_id" : "uvo0yrqqk9g",
  "history_input" : "\n\n\n# Suppress warnings\nimport warnings\nwarnings.simplefilter('ignore')\nwarnings.filterwarnings('ignore')\n\n# Direct access\nimport earthaccess \nfrom pprint import pprint\nimport xarray as xr\n\n# Harmony\nimport geopandas as gpd\nimport geoviews as gv\ngv.extension('bokeh', 'matplotlib')\nfrom harmony import BBox, Client, Collection, Request, LinkType\nimport datetime as dt\nimport s3fs",
  "history_output" : "/srv/conda/envs/notebook/lib/python3.9/site-packages/geoviews/operation/__init__.py:14: HoloviewsDeprecationWarning: 'ResamplingOperation' is deprecated and will be removed in version 1.17, use 'ResampleOperation2D' instead.\n  from holoviews.operation.datashader import (\n",
  "history_begin_time" : 1686246439537,
  "history_end_time" : 1686246448413,
  "history_notes" : null,
  "history_process" : "wttkvt",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "00z9oxnb2zd",
  "history_input" : "from earth_data_utils import *\n\nssh_short_name = \"SEA_SURFACE_HEIGHT_ALT_GRIDS_L4_2SATS_5DAY_6THDEG_V_JPL2205\"\n\nresults = earthaccess.search_data(\n    short_name=ssh_short_name,\n    cloud_hosted=True,\n    temporal=(\"2021-07-01\", \"2021-09-30\"),\n)",
  "history_output" : "/srv/conda/envs/notebook/lib/python3.9/site-packages/geoviews/operation/__init__.py:14: HoloviewsDeprecationWarning: 'ResamplingOperation' is deprecated and will be removed in version 1.17, use 'ResampleOperation2D' instead.\n  from holoviews.operation.datashader import (\nGranules found: 18\n",
  "history_begin_time" : 1686246449538,
  "history_end_time" : 1686246460281,
  "history_notes" : null,
  "history_process" : "yvo1ds",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "2pa3md4k73i",
  "history_input" : "from search_data import *\n\nauth = earthaccess.login(strategy=\"netrc\", persist=True)\nds = xr.open_mfdataset(earthaccess.open(results))\ngeojson_path = '/home/jovyan/gulf.json'\ngdf = gpd.read_file(geojson_path) #Return a GeoDataFrame object\n\ntry:\n  harmony_client = Client()\n  sst_short_name=\"MUR-JPL-L4-GLOB-v4.1\"\n\n  request = Request(\n      collection=Collection(id=sst_short_name),\n      shape=geojson_path,\n      temporal={\n      'start': dt.datetime(2021, 8, 1, 1),\n      'stop': dt.datetime(2021, 8, 1, 2)   \n      },\n  )\n  job_id = harmony_client.submit(request)\n  harmony_client.wait_for_processing(job_id, show_progress=True)\n  data = harmony_client.result_json(job_id)\n  results = harmony_client.result_urls(job_id, link_type=LinkType.s3)\n  urls = list(results)\n  url = urls[0]\nexcept:\n  print(\"please re-run the request\")",
  "history_output" : "Running",
  "history_begin_time" : 1686246461905,
  "history_end_time" : 1686246461463,
  "history_notes" : null,
  "history_process" : "cgvhiy",
  "host_id" : "100001",
  "indicator" : "Running"
}]
